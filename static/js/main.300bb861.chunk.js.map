{"version":3,"sources":["components/atoms/Icons.js","lib/GeoUtils.js","lib/PropTypes.js","lib/Constants.js","components/organisms/LocatorGoogleMaps.js","components/organisms/LocatorMapBox.js","components/atoms/DirectionBox.js","components/atoms/DistanceBox.js","components/atoms/AgeBox.js","components/organisms/Locator.js","components/molecules/LabelWithTooltip.js","components/organisms/Settings.js","components/organisms/PointsTable.js","lib/Settings.js","lib/PayloadProcessing.js","App.js","serviceWorker.js","index.js"],"names":["generateFontAwesomeIcon","faType","Icon","component","icon","DataIcon","faTable","ReloadIcon","ReloadOutlined","SettingsIcon","SettingOutlined","LocationFixIcon","faMapMarkedAlt","LocationNoFixIcon","CloseOutlined","DirectionForwardIcon","ArrowUpOutlined","DirectionLeftIcon","ArrowLeftOutlined","DirectionRightIcon","ArrowRightOutlined","DirectionUnknownIcon","QuestionOutlined","DistanceSightIcon","faEye","DistanceWalkIcon","faWalking","DistanceDriveIcon","faCarSide","DistanceFlyIcon","faPlane","InfoIcon","InfoCircleOutlined","MapLinkIcon","FontAwesomeIcon","GeoUtils","PropTypes","arrayOf","shape","time","instanceOf","Date","isRequired","deviceId","string","altitude","number","latitude","longitude","hdop","sats","heading","CONSTANTS","DATA_SOURCE","TTN","CUSTOM","DEFAULT_MAP_CENTER","LATITUDE","LONGITUDE","DEFAULT_MAP_ZOOM","LocatorGoogleMaps","center","this","props","google","apiKey","route","points","map","point","lng","lat","length","GLOBAL_CONSTANTS","bounds","maps","LatLngBounds","forEach","extend","undefined","zoom","zoomControl","mapTypeControl","fullscreenControl","streetViewControl","scrollwheel","draggable","keyboardShortcuts","disableDoubleClickZoom","name","position","zIndex","Marker","MAX_ZINDEX","path","SymbolPath","FORWARD_CLOSED_ARROW","scale","fillColor","fillOpacity","strokeColor","strokeWeight","rotation","anchor","Point","CIRCLE","strokeOpacity","React","Component","defaultProps","GoogleApiWrapper","linePaint","targetCirclePaint","LocatorMapBox","accessToken","MapBox","ReactMapboxGl","interactive","console","log","prevProps","tr","transform","centerTransform","project","MapboxGl","convert","maxDist","dist","Math","max","lateralPadding","width","verticalPadding","height","scaleX","scaleY","warn","maxZoom","min","scaleZoom","circularFitBounds","style","containerStyle","bearing","movingMethod","Consumer","type","id","layout","coordinates","paint","DirectionBox","direction","directionValue","directionIcon","title","value","precision","prefix","suffix","DistanceBox","distance","distanceValue","distanceUnit","distanceIcon","momentDurationFormatSetup","moment","AgeBox","updateAge","lastUpdateTime","setState","age","duration","diff","state","timer","setInterval","clearInterval","hasFix","format","defaultOrientation","FullViewport","styled","div","AlertsOverlay","NavigationBar","NavigationBarItem","window","screen","Locator","handleHeadingChange","event","alpha","webkitCompassHeading","absolute","orientation","mozOrientation","msOrientation","adjustment","currentOrientation","split","normalizeHeading","handleLocationUpdate","coords","handleLocationUpdateFail","error","watchPositionId","throttledHandleHeadingChange","throttle","addEventListener","navigator","geolocation","watchPosition","enableHighAccuracy","maximumAge","timeout","errorInfo","removeEventListener","clearWatch","googleApiKey","mapBoxAccessToken","maxPointsToRenderOnMap","validPoints","filter","pointsToRenderOnMap","slice","targetPoint","lastUpdatePoint","targetDistance","targetDirection","p1","LatLon","p2","distanceTo","initialBearingTo","message","IconWithSpacing","LabelWithTooltip","label","tooltip","DEFAULT_DATA_SOURCE","DEFAULT_CORS_PROXY","DEFAULT_QUERY_LAST","DEFAULT_MAX_POINTS","WideForm","Form","mustBeSetIfDataSourceIsTtn","getFieldValue","validator","rule","Promise","resolve","reject","Error","Settings","onFinish","values","onFinishFailed","onValuesChange","changedValues","allValues","dataSource","serializedSettings","customDataUrl","ttnApplicationId","ttnDeviceId","ttnAccessKey","ttnCorsProxyUrl","ttnQueryLast","labelCol","span","wrapperCol","Item","initialValue","dependencies","rules","placeholder","Group","Button","hidden","required","sm","offset","xs","htmlType","onClick","href","columns","dataIndex","key","render","toLocaleString","defaultSortOrder","sorter","a","b","localeCompare","text","record","target","rel","PointsTable","GOOGLE_API_KEY","MAP_BOX_ACCESS_TOKEN","CUSTOM_DATA_URL","TTN_APPLICATION_ID","TTN_DEVICE_ID","TTN_ACCESS_KEY","TTN_CORS_PROXY_URL","TTN_QUERY_LAST","MAX_POINTS_TO_RENDER_ON_MAP","getKey","capitalizeFirstLetter","charAt","toUpperCase","settings","Object","settingKey","val","localStorage","getItem","push","encodeURIComponent","join","data","possibleSettings","settingPair","pair","includes","setItem","decodeURIComponent","v","removeItem","JSON5","require","lppGpsRegexp","PayloadProcessing","sample","gps_20","device_id","match","jsonized","replace","object","parse","process","AppContainer","CommandsBar","nav","App","handleSettingsFinish","SettingsProvider","setGoogleApiKey","setMapBoxAccessToken","setDataSource","setCustomDataUrl","setTtnApplicationId","setTtnDeviceId","setTtnAccessKey","setTtnCorsProxyUrl","setTtnQueryLast","setMaxPointsToRenderOnMap","location","reload","settingsVisible","handleLoadData","loadingData","fetchData","then","response","ok","status","json","notification","description","statusText","processLocationData","catch","toString","hashParser","HashGet","has","getValue","deserialize","getMaxPointsToRenderOnMap","pointsTableVisible","getGoogleApiKey","getMapBoxAccessToken","getDataSource","getCustomDataUrl","getTtnApplicationId","getTtnDeviceId","getTtnAccessKey","getTtnCorsProxyUrl","getTtnQueryLast","parseInt","preProcessSample","fetch","myHeaders","Headers","append","headers","loading","placement","visible","content","trigger","onVisibleChange","serialize","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.300bb861.chunk.js","sourcesContent":["import React from 'react';\nimport Icon, {\n\tReloadOutlined, SettingOutlined, CloseOutlined, ArrowUpOutlined, ArrowLeftOutlined, ArrowRightOutlined, QuestionOutlined, InfoCircleOutlined,\n} from '@ant-design/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n\tfaCoffee, faTable, faMapMarkedAlt, faWalking, faCarSide, faPlane,\n} from '@fortawesome/free-solid-svg-icons'\nimport { faEye } from '@fortawesome/free-regular-svg-icons'\n\n// Reference:\n// https://github.com/FortAwesome/Font-Awesome/tree/master/js-packages/%40fortawesome - fa packages\n// https://github.com/FortAwesome/react-fontawesome - fa reference\n// https://fontawesome.com/icons?d=gallery&m=free - fa icons\n// https://ant.design/components/icon/ - ant icons\n\n// tests\n// this is one object/component instance\n// export const Test = (<FontAwesomeIcon icon={faCoffee} />);\n\n// this is generator to return FA icon\n// this is using props expanding, not recommended, only use if we will need it\n// export const TestC = props => <FontAwesomeIcon icon={faCoffee} {...props} />;\n// export const TestC = () => <FontAwesomeIcon icon={faCoffee} />;\n\n// wrap it in an antd icon component as it gives special meaning to antd for the purpose of spacing (like in a button)\nexport const Test = () => <Icon component={() => (<FontAwesomeIcon icon={faCoffee} />)} />;\n\n// added the following css globally to prevent issue with vertical align caused by having fa icon inside of an antd icon wrapper\n// https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n// https://github.com/FortAwesome/Font-Awesome/issues/16526\n// TODO, find a way to embed that rule here locally instead of at a global level\n/*\n.anticon .svg-inline--fa {\n  vertical-align: 0;\n}\n*/\n\n// util\nfunction generateFontAwesomeIcon(faType) {\n\treturn () => <Icon component={() => (<FontAwesomeIcon icon={faType} />)} />;\n}\n\n// icons\n// export const Data = () => <Icon component={() => (<FontAwesomeIcon icon={faTable} />)} />;\nexport const DataIcon = generateFontAwesomeIcon(faTable);\nexport const ReloadIcon = ReloadOutlined;\nexport const SettingsIcon = SettingOutlined;\n\nexport const LocationFixIcon = generateFontAwesomeIcon(faMapMarkedAlt);\nexport const LocationNoFixIcon = CloseOutlined;\n\nexport const DirectionForwardIcon = ArrowUpOutlined;\nexport const DirectionLeftIcon = ArrowLeftOutlined;\nexport const DirectionRightIcon = ArrowRightOutlined;\nexport const DirectionUnknownIcon = QuestionOutlined;\n\nexport const DistanceSightIcon = generateFontAwesomeIcon(faEye);\nexport const DistanceWalkIcon = generateFontAwesomeIcon(faWalking);\nexport const DistanceDriveIcon = generateFontAwesomeIcon(faCarSide);\nexport const DistanceFlyIcon = generateFontAwesomeIcon(faPlane);\n\nexport const InfoIcon = InfoCircleOutlined;\n\nexport const MapLinkIcon = generateFontAwesomeIcon(faMapMarkedAlt);\n\nexport default FontAwesomeIcon;\n","class GeoUtils {\n\tstatic normalizeHeading(heading) {\n\t\tif (heading > 180) {\n\t\t\treturn heading - 360;\n\t\t}\n\t\tif (heading < -180) {\n\t\t\treturn heading + 360;\n\t\t}\n\t\treturn heading;\n\t}\n}\n\nexport default GeoUtils;\n","import PropTypes from 'prop-types';\n\nexport const PointsPropType = PropTypes.arrayOf(PropTypes.shape({\n\ttime: PropTypes.instanceOf(Date).isRequired,\n\tdeviceId: PropTypes.string,\n\taltitude: PropTypes.number,\n\tlatitude: PropTypes.number,\n\tlongitude: PropTypes.number,\n\thdop: PropTypes.number,\n\tsats: PropTypes.number,\n}));\n\nexport const MapValidPointsPropType = PropTypes.arrayOf(PropTypes.shape({\n\ttime: PropTypes.instanceOf(Date).isRequired,\n\tdeviceId: PropTypes.string,\n\taltitude: PropTypes.number,\n\tlatitude: PropTypes.number.isRequired,\n\tlongitude: PropTypes.number.isRequired,\n\thdop: PropTypes.number,\n\tsats: PropTypes.number,\n}));\n\nexport default PointsPropType;\n","export const CONSTANTS = {\n\tDATA_SOURCE: {\n\t\tTTN: 'ttn',\n\t\tCUSTOM: 'custom',\n\t},\n\tDEFAULT_MAP_CENTER: {\n\t\tLATITUDE: 8.990553,\n\t\tLONGITUDE: -79.590706,\n\t},\n\tDEFAULT_MAP_ZOOM: 16,\n};\n\nexport default CONSTANTS;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tMap, Marker, GoogleApiWrapper, Polyline,\n} from 'google-maps-react';\nimport { MapValidPointsPropType } from '../../lib/PropTypes';\nimport GLOBAL_CONSTANTS from '../../lib/Constants';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LocatorGoogleMaps extends React.Component {\n\t/*\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t*/\n\n\trender() {\n\t\tconst {\n\t\t\tgoogle,\n\t\t\t// apiKey is used when applying the HOC\n\t\t\tapiKey, // eslint-disable-line no-unused-vars\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t\theading,\n\t\t\tpoints,\n\t\t} = this.props;\n\n\t\t// console.log('render', this.props);\n\n\t\tconst route = points.map((point) => ({ lng: point.longitude, lat: point.latitude }));\n\t\t// console.log('google maps render, points', points.length, points, route);\n\n\t\t// decide on center of map\n\t\tlet center;\n\t\tif (longitude !== false && latitude !== false) {\n\t\t\tcenter = { lat: latitude, lng: longitude }; // my position\n\t\t} else if (route.length > 0) {\n\t\t\tcenter = route[route.length - 1]; // last target position\n\t\t} else {\n\t\t\tcenter = { lng: GLOBAL_CONSTANTS.DEFAULT_MAP_CENTER.LONGITUDE, lat: GLOBAL_CONSTANTS.DEFAULT_MAP_CENTER.LATITUDE }; // some default position that is not just ocean\n\t\t}\n\t\t// console.log('map center', center);\n\n\t\t// figure out optimal bounds\n\t\tconst bounds = new google.maps.LatLngBounds();\n\t\troute.forEach((point) => {\n\t\t\tbounds.extend(point);\n\t\t\tbounds.extend({ lat: 2 * center.lat - point.lat, lng: 2 * center.lng - point.lng }); // symmetrically\n\t\t});\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{google && (\n\t\t\t\t\t<Map\n\t\t\t\t\t\tgoogle={google}\n\t\t\t\t\t\tbounds={route.length > 0 ? bounds : undefined}\n\t\t\t\t\t\tcenter={route.length > 0 ? undefined : center}\n\t\t\t\t\t\tzoom={route.length > 0 ? undefined : GLOBAL_CONSTANTS.DEFAULT_MAP_ZOOM}\n\t\t\t\t\t\tzoomControl={false}\n\t\t\t\t\t\tmapTypeControl={false}\n\t\t\t\t\t\tfullscreenControl={false}\n\t\t\t\t\t\tstreetViewControl={false}\n\t\t\t\t\t\tscrollwheel={false}\n\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\tkeyboardShortcuts={false}\n\t\t\t\t\t\tdisableDoubleClickZoom\n\t\t\t\t\t>\n\t\t\t\t\t\t{longitude !== false && latitude !== false && heading !== false && (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tname=\"Your location with heading\"\n\t\t\t\t\t\t\t\tposition={{ lat: latitude, lng: longitude }}\n\t\t\t\t\t\t\t\tzIndex={google.maps.Marker.MAX_ZINDEX + 1}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\tpath: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n\t\t\t\t\t\t\t\t\tscale: 5,\n\t\t\t\t\t\t\t\t\tfillColor: 'white',\n\t\t\t\t\t\t\t\t\tfillOpacity: 0.5,\n\t\t\t\t\t\t\t\t\tstrokeColor: 'black',\n\t\t\t\t\t\t\t\t\tstrokeWeight: 3,\n\t\t\t\t\t\t\t\t\trotation: heading,\n\t\t\t\t\t\t\t\t\tanchor: new google.maps.Point(0, 2.6),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{longitude !== false && latitude !== false && heading === false && (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tname=\"Your location\"\n\t\t\t\t\t\t\t\tposition={{ lat: latitude, lng: longitude }}\n\t\t\t\t\t\t\t\tzIndex={google.maps.Marker.MAX_ZINDEX + 1}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\tpath: google.maps.SymbolPath.CIRCLE,\n\t\t\t\t\t\t\t\t\tscale: 8,\n\t\t\t\t\t\t\t\t\tfillColor: 'white',\n\t\t\t\t\t\t\t\t\tfillOpacity: 0.5,\n\t\t\t\t\t\t\t\t\tstrokeColor: 'black',\n\t\t\t\t\t\t\t\t\tstrokeWeight: 3,\n\t\t\t\t\t\t\t\t\tanchor: new google.maps.Point(0, 0),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{route.length > 0 && (\n\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\tname=\"Target location\"\n\t\t\t\t\t\t\t\tposition={route[route.length - 1]}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\tpath: google.maps.SymbolPath.CIRCLE,\n\t\t\t\t\t\t\t\t\tscale: 8,\n\t\t\t\t\t\t\t\t\tfillColor: 'white',\n\t\t\t\t\t\t\t\t\tfillOpacity: 0.5,\n\t\t\t\t\t\t\t\t\tstrokeColor: 'green',\n\t\t\t\t\t\t\t\t\tstrokeWeight: 3,\n\t\t\t\t\t\t\t\t\tanchor: new google.maps.Point(0, 0),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Polyline\n\t\t\t\t\t\t\tpath={route}\n\t\t\t\t\t\t\tstrokeColor=\"#0000FF\"\n\t\t\t\t\t\t\tstrokeOpacity={0.8}\n\t\t\t\t\t\t\tstrokeWeight={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Map>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nLocatorGoogleMaps.defaultProps = {\n\tlongitude: false,\n\tlatitude: false,\n\theading: false,\n}\n\nLocatorGoogleMaps.propTypes = {\n\tgoogle: PropTypes.shape({\n\t\tmaps: PropTypes.shape({\n\t\t\tSymbolPath: PropTypes.any,\n\t\t\tPoint: PropTypes.any,\n\t\t\tMarker: PropTypes.any,\n\t\t\tLatLngBounds: PropTypes.any,\n\t\t}),\n\t}).isRequired,\n\tapiKey: PropTypes.string.isRequired,\n\tlongitude: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\tlatitude: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\theading: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\tpoints: MapValidPointsPropType.isRequired,\n};\n\nexport default GoogleApiWrapper(\n\t(props) => ({\n\t\tapiKey: props.apiKey, // https://console.developers.google.com/apis/credentials?project=ttn-tracker-locator\n\t\t// language: props.language,\n\t}\n\t),\n)(LocatorGoogleMaps)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, {\n\tLayer,\n\tFeature,\n\tMapContext,\n\t/*\n\tScaleControl,\n\tZoomControl,\n\tRotationControl,\n\t*/\n} from 'react-mapbox-gl'; // https://github.com/alex3165/react-mapbox-gl/blob/HEAD/docs/API.md\nimport * as MapboxGl from 'mapbox-gl';\nimport { MapValidPointsPropType } from '../../lib/PropTypes';\nimport GLOBAL_CONSTANTS from '../../lib/Constants';\n\nconst CONSTANTS = {\n\tFIT_MAX_ZOOM: 30,\n\tFIT_PADDING_RATIO: 0.1, // 10% on each side\n};\n\nconst linePaint = {\n\t'line-color': '#4790E5',\n\t'line-width': 6,\n};\n\n/*\nconst meCirclePaint = {\n\t'circle-radius': 10,\n\t'circle-color': '#E54E52',\n\t'circle-opacity': 0.8,\n};\n*/\n\nconst targetCirclePaint = {\n\t'circle-radius': 10,\n\t'circle-color': '#00AA00',\n\t'circle-opacity': 0.8,\n};\n\n/*\nFit all route points in view, with the \"center\" as the center of the view.\nFit in such a way that the points will be in view at any rotation/bearing/heading\nReference: https://github.com/mapbox/mapbox-gl-js/issues/1338\n*/\nfunction circularFitBounds(map, center, route) {\n\tconst tr = map.transform;\n\t// console.log('fitBounds, tr, ', tr.width, tr.height); // size of the view in pixels\n\tconst centerTransform = tr.project(MapboxGl.LngLat.convert(center)); // position of center in pixels\n\t// console.log('fitBounds, center, ', center, centerTransform);\n\tlet maxDist = 0;\n\troute.forEach((point) => {\n\t\tconst transformed = tr.project(MapboxGl.LngLat.convert(point));\n\t\tconst dist = transformed.dist(centerTransform);\n\t\tmaxDist = Math.max(maxDist, dist);\n\t\t// console.log('fitBounds, point, ', point, transformed, dist);\n\t});\n\tif (maxDist === 0) {\n\t\treturn GLOBAL_CONSTANTS.DEFAULT_MAP_ZOOM;\n\t}\n\t// return zoom level that will fit a circle at radius of maxDist\n\tconst lateralPadding = tr.width * CONSTANTS.FIT_PADDING_RATIO;\n\tconst verticalPadding = tr.height * CONSTANTS.FIT_PADDING_RATIO;\n\tconst scaleX = (tr.width - lateralPadding * 2) / (maxDist * 2);\n\tconst scaleY = (tr.height - verticalPadding * 2) / (maxDist * 2);\n\tif (scaleY < 0 || scaleX < 0) {\n\t\tconsole.warn('Map cannot fit within canvas with the given bounds, padding, and/or offset.');\n\t\treturn GLOBAL_CONSTANTS.DEFAULT_MAP_ZOOM;\n\t}\n\tconst maxZoom = CONSTANTS.FIT_MAX_ZOOM;\n\treturn Math.min(tr.scaleZoom(tr.scale * Math.min(scaleX, scaleY)), maxZoom);\n}\n\nclass LocatorMapBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.map = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { accessToken } = this.props;\n\n\t\t// MapBox needs to be created only once (as long as access token is the same) or it will recreate the map every time\n\t\t// https://github.com/alex3165/react-mapbox-gl/issues/812\n\t\tthis.MapBox = ReactMapboxGl({\n\t\t\taccessToken,\n\t\t\tinteractive: false,\n\t\t});\n\t\tthis.accessToken = accessToken; // store token of the MaxBox instance\n\t\tconsole.log('componentDidMount', this.props, this.MapBox);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { accessToken } = this.props;\n\t\t// console.log('componentDidUpdate', prevProps, this.props);\n\n\t\t// https://www.pluralsight.com/guides/prop-changes-in-react-component\n\t\tif (prevProps.accessToken !== accessToken) {\n\t\t\t// recreate map\n\t\t\tthis.MapBox = ReactMapboxGl({\n\t\t\t\taccessToken,\n\t\t\t});\n\t\t\tthis.accessToken = accessToken; // store token of the MaxBox instance\n\t\t\tconsole.log('componentDidUpdate', accessToken, this.MapBox);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\taccessToken, latitude, longitude, heading, points,\n\t\t} = this.props;\n\n\t\tconst route = points.map((point) => [point.longitude, point.latitude]);\n\t\t// console.log('mapbox render, points', points.length, points, route);\n\n\t\t// decide on center of map\n\t\tlet center;\n\t\tif (longitude !== false && latitude !== false) {\n\t\t\tcenter = [longitude, latitude]; // my position\n\t\t} else if (route.length > 0) {\n\t\t\tcenter = route[route.length - 1]; // last target position\n\t\t} else {\n\t\t\tcenter = [GLOBAL_CONSTANTS.DEFAULT_MAP_CENTER.LONGITUDE, GLOBAL_CONSTANTS.DEFAULT_MAP_CENTER.LATITUDE]; // some default position that is not just ocean\n\t\t}\n\t\t// console.log('map center', center);\n\t\t// set default zoom (before fitting a bounding view)\n\t\tlet zoom = GLOBAL_CONSTANTS.DEFAULT_MAP_ZOOM;\n\n\t\t// figure out optimal bounds\n\t\t// fitBounds seems to be reseting the bearing (per documentation)\n\t\t// https://docs.mapbox.com/mapbox-gl-js/api/map/#map#fitbounds\n\t\t// https://stackoverflow.com/questions/35586360/mapbox-gl-js-getbounds-fitbounds\n\t\t// console.log('map in render', this.map);\n\t\tif (this.map && route.length > 0) {\n\t\t\tzoom = circularFitBounds(this.map, center, route);\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.MapBox && this.accessToken === accessToken && (\n\t\t\t\t\t<this.MapBox\n\t\t\t\t\t\t// eslint-disable-next-line react/style-prop-object\n\t\t\t\t\t\tstyle=\"mapbox://styles/mapbox/streets-v11\"\n\t\t\t\t\t\t// standard icons: https://github.com/mapbox/mapbox-gl-styles\n\t\t\t\t\t\t// available in light-v9 and other styles\n\t\t\t\t\t\t// marker-15 is available in light-v9 but not in streets-vX\n\t\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcenter={center}\n\t\t\t\t\t\tbearing={[heading || 0]}\n\t\t\t\t\t\tzoom={[zoom]}\n\t\t\t\t\t\tmovingMethod=\"jumpTo\" // try \"flyTo\" with flyToOptions instead? https://docs.mapbox.com/mapbox-gl-js/api/map/#map#flyto\n\t\t\t\t\t>\n\t\t\t\t\t\t<MapContext.Consumer>\n\t\t\t\t\t\t\t{(map) => {\n\t\t\t\t\t\t\t\t// use `map` here\n\t\t\t\t\t\t\t\t// console.log('map in context', map, map.transform);\n\t\t\t\t\t\t\t\tthis.map = map; // store map object\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</MapContext.Consumer>\n\t\t\t\t\t\t{/*\n\t\t\t\t\t\t<ScaleControl />\n\t\t\t\t\t\t<ZoomControl />\n\t\t\t\t\t\t<RotationControl style={{ top: 80 }} />\n\t\t\t\t\t\t*/}\n\t\t\t\t\t\t{/*\n\t\t\t\t\t\t<Layer type=\"symbol\" layout={{ 'icon-image': 'marker-15' }}>\n\t\t\t\t\t\t\t<Feature coordinates={[longitude + 0.001, latitude]} />\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t<Layer type=\"circle\" id=\"me\" paint={meCirclePaint}>\n\t\t\t\t\t\t\t<Feature coordinates={[longitude, latitude]} />\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t*/}\n\t\t\t\t\t\t{longitude !== false && latitude !== false && (\n\t\t\t\t\t\t\t<Layer type=\"symbol\" id=\"me\" layout={{ 'icon-image': 'harbor-15' }}>\n\t\t\t\t\t\t\t\t<Feature coordinates={[longitude, latitude]} />\n\t\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{route.length > 0 && (\n\t\t\t\t\t\t\t<Layer type=\"circle\" id=\"target\" paint={targetCirclePaint}>\n\t\t\t\t\t\t\t\t<Feature coordinates={route[route.length - 1]} />\n\t\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Layer type=\"line\" id=\"path\" paint={linePaint}>\n\t\t\t\t\t\t\t<Feature coordinates={route} />\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</this.MapBox>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nLocatorMapBox.defaultProps = {\n\tlongitude: false,\n\tlatitude: false,\n\theading: false,\n}\n\nLocatorMapBox.propTypes = {\n\taccessToken: PropTypes.string.isRequired,\n\tlongitude: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\tlatitude: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\theading: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n\tpoints: MapValidPointsPropType.isRequired,\n};\n\nexport default LocatorMapBox;\n","import React from 'react';\n// import styled from 'styled-components';\nimport { Statistic } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n\tDirectionForwardIcon, DirectionLeftIcon, DirectionRightIcon, DirectionUnknownIcon,\n} from './Icons';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DirectionBox extends React.Component {\n\t/*\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t*/\n\n\trender() {\n\t\tconst { direction } = this.props;\n\n\t\t// format direction with units\n\t\tlet directionValue = '-';\n\t\tlet directionIcon = (<DirectionUnknownIcon />);\n\t\tif (direction !== false) {\n\t\t\tdirectionValue = direction > 180 ? direction - 360 : direction;\n\t\t\tdirectionIcon = (<DirectionForwardIcon />);\n\t\t\tif (directionValue < -45) {\n\t\t\t\tdirectionIcon = (<DirectionLeftIcon />);\n\t\t\t}\n\t\t\tif (directionValue > 45) {\n\t\t\t\tdirectionIcon = (<DirectionRightIcon />);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Statistic\n\t\t\t\ttitle=\"Direction to target\"\n\t\t\t\tvalue={directionValue}\n\t\t\t\tprecision={1}\n\t\t\t\tprefix={directionIcon}\n\t\t\t\tsuffix=\"°\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nDirectionBox.defaultProps = {\n\tdirection: false,\n}\n\nDirectionBox.propTypes = {\n\tdirection: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]), // in degrees\n};\n\nexport default DirectionBox;\n","import React from 'react';\n// import styled from 'styled-components';\nimport { Statistic } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n\tDistanceSightIcon, DistanceWalkIcon, DistanceDriveIcon, DistanceFlyIcon,\n} from './Icons';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DistanceBox extends React.Component {\n\t/*\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t*/\n\n\trender() {\n\t\tconst { distance } = this.props;\n\n\t\t// format distance with units\n\t\tlet distanceValue = distance;\n\t\tlet distanceUnit = 'm';\n\t\tlet distanceIcon = (<DistanceSightIcon />);\n\t\tif (distance > 100) {\n\t\t\tdistanceIcon = (<DistanceWalkIcon />);\n\t\t}\n\t\tif (distance > 1000) {\n\t\t\tdistanceIcon = (<DistanceDriveIcon />);\n\t\t}\n\t\tif (distance > 200000) {\n\t\t\tdistanceIcon = (<DistanceFlyIcon />);\n\t\t}\n\t\tif (distance > 500) { // after 500m convert to km\n\t\t\tdistanceValue /= 1000;\n\t\t\tdistanceUnit = 'km';\n\t\t}\n\n\t\treturn (\n\t\t\t<Statistic\n\t\t\t\ttitle=\"Distance to target\"\n\t\t\t\tvalue={distanceValue}\n\t\t\t\tprecision={1}\n\t\t\t\tprefix={distanceIcon}\n\t\t\t\tsuffix={distanceUnit}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nDistanceBox.propTypes = {\n\tdistance: PropTypes.number.isRequired, // in meters\n};\n\nexport default DistanceBox;\n","import React from 'react';\n// import styled from 'styled-components';\nimport { Statistic } from 'antd';\nimport moment from 'moment'; // https://momentjs.com/docs/#/durations/\nimport momentDurationFormatSetup from 'moment-duration-format'; // https://github.com/jsmreese/moment-duration-format\nimport PropTypes from 'prop-types';\nimport { LocationFixIcon, LocationNoFixIcon } from './Icons';\n\nmomentDurationFormatSetup(moment);\n\nconst CONSTANTS = {\n\tINTERVAL_MS: 1000, // 1Hz\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass AgeBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst { lastUpdateTime } = this.props;\n\t\tthis.state = {\n\t\t\tage: moment.duration(moment().diff(lastUpdateTime)),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(this.updateAge, CONSTANTS.INTERVAL_MS);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.timer) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.timer = null;\n\t\t}\n\t}\n\n\tupdateAge = () => {\n\t\tconst { lastUpdateTime } = this.props;\n\t\tthis.setState({ age: moment.duration(moment().diff(lastUpdateTime)) });\n\t};\n\n\trender() {\n\t\tconst { hasFix } = this.props;\n\t\tconst { age } = this.state;\n\n\t\t// format\n\t\tconst value = age.format();\n\t\tconst icon = hasFix ? (<LocationFixIcon />) : (<LocationNoFixIcon />);\n\n\t\t// TODO: state, timer, render diff\n\n\t\treturn (\n\t\t\t<Statistic\n\t\t\t\ttitle=\"Age of target position\"\n\t\t\t\tvalue={value}\n\t\t\t\tprefix={icon}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nAgeBox.propTypes = {\n\tlastUpdateTime: PropTypes.instanceOf(Date).isRequired, // in meters\n\thasFix: PropTypes.bool.isRequired,\n};\n\nexport default AgeBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Alert } from 'antd';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash.throttle';\nimport LatLon from 'geodesy/latlon-spherical';\n\nimport { PointsPropType } from '../../lib/PropTypes';\nimport GeoUtils from '../../lib/GeoUtils';\n\nimport LocatorGoogleMaps from './LocatorGoogleMaps';\nimport LocatorMapBox from './LocatorMapBox';\nimport DirectionBox from '../atoms/DirectionBox';\nimport DistanceBox from '../atoms/DistanceBox';\nimport AgeBox from '../atoms/AgeBox';\n\nconst CONSTANTS = {\n\tTHROTTLE_HEADING: 100, // 10Hz\n};\n\nconst FullViewport = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n`;\n\nconst AlertsOverlay = styled.div`\n\tposition: absolute;\n\tleft: 2vw;\n\ttop: 10vh;\n`;\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\nconst NavigationBar = styled.div`\n\tposition: absolute;\n\tbottom: 2vh;\n\tdisplay: flex;\n\twidth: 100%;\n\tflex-flow: row wrap;\n\tjustify-content: center;\n`;\n\nconst NavigationBarItem = styled.div`\n\tdisplay: inline-block;\n\tpadding: 4px 15px;\n\tbackground: #fff;\n\tborder: 1px solid #d9d9d9;\n\twhite-space: nowrap;\n`;\n\n// browser agnostic orientation\nfunction getBrowserOrientation() {\n\tlet orientation;\n\tif (window.screen.orientation && window.screen.orientation.type) {\n\t\torientation = window.screen.orientation.type;\n\t} else {\n\t\torientation = window.screen.orientation\n\t\t\t|| window.screen.mozOrientation\n\t\t\t|| window.screen.msOrientation;\n\t}\n\n\t/*\n\t\t'portait-primary':      for (screen width < screen height, e.g. phone, phablet, small tablet)\n\t\t\t\t\t\t\t\tdevice is in 'normal' orientation\n\t\t\t\t\t\t\t\tfor (screen width > screen height, e.g. large tablet, laptop)\n\t\t\t\t\t\t\t\tdevice has been turned 90deg clockwise from normal\n\t\t'portait-secondary':    for (screen width < screen height)\n\t\t\t\t\t\t\t\tdevice has been turned 180deg from normal\n\t\t\t\t\t\t\t\tfor (screen width > screen height)\n\t\t\t\t\t\t\t\tdevice has been turned 90deg anti-clockwise (or 270deg clockwise) from normal\n\t\t'landscape-primary':    for (screen width < screen height)\n\t\t\t\t\t\t\t\tdevice has been turned 90deg clockwise from normal\n\t\t\t\t\t\t\t\tfor (screen width > screen height)\n\t\t\t\t\t\t\t\tdevice is in 'normal' orientation\n\t\t'landscape-secondary':  for (screen width < screen height)\n\t\t\t\t\t\t\t\tdevice has been turned 90deg anti-clockwise (or 270deg clockwise) from normal\n\t\t\t\t\t\t\t\tfor (screen width > screen height)\n\t\t\t\t\t\t\t\tdevice has been turned 180deg from normal\n\t*/\n\n\treturn orientation;\n}\n\n// learn defaults for this device\nlet defaultOrientation;\nif (window.screen.width > window.screen.height) {\n\tdefaultOrientation = 'landscape';\n} else {\n\tdefaultOrientation = 'portrait';\n}\n\nclass Locator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\theading: false,\n\t\t\tlatitude: false,\n\t\t\tlongitude: false,\n\t\t};\n\t\tthis.watchPositionId = null;\n\t\tthis.throttledHandleHeadingChange = throttle(this.handleHeadingChange, CONSTANTS.THROTTLE_HEADING);\n\t}\n\n\tcomponentDidMount() {\n\t\t// window.addEventListener('resize', this.handleResize);\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/ondeviceorientation\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/ondeviceorientationabsolute\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/OrientationSensor\n\t\twindow.addEventListener('deviceorientation', this.throttledHandleHeadingChange);\n\t\twindow.addEventListener('deviceorientationabsolute', this.throttledHandleHeadingChange);\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition\n\t\tthis.watchPositionId = navigator.geolocation.watchPosition(this.handleLocationUpdate, this.handleLocationUpdateFail, {\n\t\t\tenableHighAccuracy: true,\n\t\t\tmaximumAge: 30000,\n\t\t\ttimeout: 27000,\n\t\t});\n\t}\n\n\t/*\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\t*/\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\\\n\t\tconsole.log('componentDidCatch', error, errorInfo);\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// window.removeEventListener('resize', this.handleResize);\n\n\t\twindow.removeEventListener('deviceorientation', this.throttledHandleHeadingChange);\n\t\twindow.removeEventListener('deviceorientationabsolute', this.throttledHandleHeadingChange);\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/clearWatch\n\t\tnavigator.geolocation.clearWatch(this.watchPositionId);\n\t\tthis.watchPositionId = null;\n\t}\n\n\t// heading\n\thandleHeadingChange = (event) => {\n\t\tconsole.log('heading', event);\n\n\t\tlet heading = event.alpha;\n\n\t\tif (typeof event.webkitCompassHeading !== 'undefined') {\n\t\t\theading = event.webkitCompassHeading; // iOS non-standard\n\t\t} else if (!event.absolute) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst orientation = getBrowserOrientation();\n\n\t\tif (typeof heading !== 'undefined' && heading !== null) { // && typeof orientation !== \"undefined\") {\n\t\t\t// we have a browser that reports device heading and orientation\n\t\t\t/* if (debug) {\n\t\t\t\tdebugOrientation.textContent = orientation;\n\t\t\t} */\n\n\t\t\t// what adjustment we have to add to rotation to allow for current device orientation\n\t\t\tlet adjustment = 0;\n\t\t\tif (defaultOrientation === 'landscape') {\n\t\t\t\tadjustment -= 90;\n\t\t\t}\n\n\t\t\tif (typeof orientation !== 'undefined') {\n\t\t\t\tconst currentOrientation = orientation.split('-');\n\n\t\t\t\tif (defaultOrientation !== currentOrientation[0]) {\n\t\t\t\t\tif (defaultOrientation === 'landscape') {\n\t\t\t\t\t\tadjustment -= 270;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustment -= 90;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentOrientation[1] === 'secondary') {\n\t\t\t\t\tadjustment -= 180;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tpositionCurrent.hng = heading + adjustment;\n\n\t\t\tvar phase = positionCurrent.hng < 0 ? 360 + positionCurrent.hng : positionCurrent.hng;\n\t\t\tpositionHng.textContent = (360 - phase | 0) + \"°\";\n\t\t\t*/\n\n\t\t\tconsole.log('Heading', heading, adjustment, orientation, defaultOrientation, -heading - adjustment);\n\t\t\tthis.setState({ heading: GeoUtils.normalizeHeading(-heading - adjustment) }); // the heading and adjustment so far are for where the north is, mirror to get our heading relative to north\n\n\t\t\t/*\n\t\t\t\t\t// apply rotation to compass rose\n\t\t\t\t\tif (typeof rose.style.transform !== \"undefined\") {\n\t\t\t\t\t\trose.style.transform = \"rotateZ(\" + positionCurrent.hng + \"deg)\";\n\t\t\t\t\t} else if (typeof rose.style.webkitTransform !== \"undefined\") {\n\t\t\t\t\t\trose.style.webkitTransform = \"rotateZ(\" + positionCurrent.hng + \"deg)\";\n\t\t\t\t\t} */\n\t\t} else {\n\t\t\t// device can't show heading\n\n\t\t\t// positionHng.textContent = \"n/a\";\n\t\t\t// showHeadingWarning();\n\t\t\tconsole.log('No heading');\n\t\t\tthis.setState({ heading: false });\n\t\t}\n\t};\n\n\t// location (based on https://github.com/lamplightdev/compass)\n\thandleLocationUpdate = (position) => {\n\t\tconsole.log('pos', position.coords); // can also have heading, accuracy and speed but not all browser provide that\n\t\tconst { latitude, longitude } = position.coords;\n\t\tthis.setState({ latitude, longitude });\n\t}\n\n\thandleLocationUpdateFail = (error) => {\n\t\t// TODO, render alert or notification\n\t\tconsole.log('location fail: ', error);\n\t\tthis.setState({ latitude: false, longitude: false });\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tgoogleApiKey, mapBoxAccessToken, points, maxPointsToRenderOnMap,\n\t\t} = this.props;\n\t\tconst { latitude, longitude, heading } = this.state;\n\n\t\t// get subset of points to render on map\n\t\tconst validPoints = points.filter((point) => typeof point.latitude === 'number' && typeof point.longitude === 'number');\n\t\tlet pointsToRenderOnMap = [];\n\t\tif (points.length) {\n\t\t\tif (points.length > maxPointsToRenderOnMap) {\n\t\t\t\t// assume sorted by time\n\t\t\t\t// assume older entries are first\n\t\t\t\tpointsToRenderOnMap = validPoints.slice(-maxPointsToRenderOnMap);\n\t\t\t} else {\n\t\t\t\tpointsToRenderOnMap = validPoints;\n\t\t\t}\n\t\t}\n\t\t// console.log('points for map', points.length, validPoints.length, pointsToRenderOnMap.length);\n\n\t\t// target point (last known target position)\n\t\t// assume points are sorted with oldest first\n\t\tconst targetPoint = pointsToRenderOnMap.length > 0 ? pointsToRenderOnMap[pointsToRenderOnMap.length - 1] : false;\n\t\tconst lastUpdatePoint = points.length > 0 ? points[points.length - 1] : false;\n\n\t\t// distance and direction\n\t\tlet targetDistance = false;\n\t\tlet targetDirection = false;\n\t\t// test when there is not position or heading\n\t\t// targetDistance = 340;\n\t\t// targetDirection = 20;\n\t\t// calculate from known points\n\t\tif (latitude !== false && longitude !== false && targetPoint) {\n\t\t\tconst p1 = new LatLon(latitude, longitude);\n\t\t\tconst p2 = new LatLon(targetPoint.latitude, targetPoint.longitude);\n\t\t\ttargetDistance = p1.distanceTo(p2); // defaults to meters\n\t\t\tif (heading !== false) {\n\t\t\t\ttargetDirection = p1.initialBearingTo(p2); // degrees from north (0°..360°).\n\t\t\t\tconsole.log('direction to target', { bearing: targetDirection, heading });\n\t\t\t\ttargetDirection = GeoUtils.normalizeHeading(targetDirection - heading); // correct relative to current heading\n\t\t\t}/* else {\n\t\t\t\t// test\n\t\t\t\tconst headingTmp = 90;\n\t\t\t\ttargetDirection = p1.initialBearingTo(p2); // degrees from north (0°..360°).\n\t\t\t\tconsole.log('direction to target (test)', { bearing: targetDirection, headingTmp });\n\t\t\t\ttargetDirection = GeoUtils.normalizeHeading(targetDirection - headingTmp); // correct relative to current heading\n\t\t\t} */\n\t\t}\n\n\t\t// console.log('render', this.props);\n\n\t\treturn (\n\t\t\t<FullViewport>\n\t\t\t\t{mapBoxAccessToken && (\n\t\t\t\t\t<LocatorMapBox\n\t\t\t\t\t\taccessToken={mapBoxAccessToken}\n\t\t\t\t\t\tlatitude={latitude}\n\t\t\t\t\t\tlongitude={longitude}\n\t\t\t\t\t\theading={heading}\n\t\t\t\t\t\tpoints={pointsToRenderOnMap}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!mapBoxAccessToken && googleApiKey && (\n\t\t\t\t\t<LocatorGoogleMaps\n\t\t\t\t\t\tapiKey={googleApiKey}\n\t\t\t\t\t\tlatitude={latitude}\n\t\t\t\t\t\tlongitude={longitude}\n\t\t\t\t\t\theading={heading}\n\t\t\t\t\t\tpoints={pointsToRenderOnMap}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!googleApiKey && !mapBoxAccessToken && (\n\t\t\t\t\t<Alert message=\"No map API keys specified in Settings\" type=\"error\" />\n\t\t\t\t)}\n\t\t\t\t<NavigationBar>\n\t\t\t\t\t{targetDistance !== false && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavigationBarItem>\n\t\t\t\t\t\t\t\t<DistanceBox\n\t\t\t\t\t\t\t\t\tdistance={targetDistance}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NavigationBarItem>\n\t\t\t\t\t\t\t<NavigationBarItem>\n\t\t\t\t\t\t\t\t<DirectionBox\n\t\t\t\t\t\t\t\t\tdirection={targetDirection}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NavigationBarItem>\n\t\t\t\t\t\t\t<NavigationBarItem>\n\t\t\t\t\t\t\t\t<AgeBox\n\t\t\t\t\t\t\t\t\tlastUpdateTime={lastUpdatePoint.time}\n\t\t\t\t\t\t\t\t\thasFix={lastUpdatePoint.latitude !== false && lastUpdatePoint.longitude !== false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</NavigationBarItem>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</NavigationBar>\n\t\t\t\t<AlertsOverlay>\n\t\t\t\t\t{heading === false && (\n\t\t\t\t\t\t<Alert message=\"Your heading is not available\" type=\"warning\" />\n\t\t\t\t\t)}\n\t\t\t\t\t{(latitude === false || longitude === false) && (\n\t\t\t\t\t\t<Alert message=\"Your location is not available\" type=\"warning\" />\n\t\t\t\t\t)}\n\t\t\t\t\t{points.length === 0 && (\n\t\t\t\t\t\t<Alert message=\"Target location is not available\" type=\"warning\" />\n\t\t\t\t\t)}\n\t\t\t\t</AlertsOverlay>\n\t\t\t</FullViewport>\n\t\t);\n\t}\n}\n\nLocator.defaultProps = {\n\tmapBoxAccessToken: '',\n\tgoogleApiKey: '',\n}\n\nLocator.propTypes = {\n\tmapBoxAccessToken: PropTypes.string,\n\tgoogleApiKey: PropTypes.string,\n\tpoints: PointsPropType.isRequired,\n\tmaxPointsToRenderOnMap: PropTypes.number.isRequired,\n};\n\nexport default Locator;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {\n\tTooltip,\n} from 'antd';\nimport { InfoIcon } from '../atoms/Icons';\n\nconst IconWithSpacing = styled(InfoIcon)`\n\tmargin: 0.3em;\n`;\n\nconst LabelWithTooltip = function component(props) {\n\tconst {\n\t\tlabel,\n\t\ttooltip,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<span>{label}</span>\n\t\t\t{' '}\n\t\t\t<Tooltip title={tooltip}>\n\t\t\t\t<IconWithSpacing />\n\t\t\t</Tooltip>\n\t\t</>\n\t);\n};\n\n// consider string or element\n// https://reactjs.org/docs/typechecking-with-proptypes.html\nLabelWithTooltip.propTypes = {\n\tlabel: PropTypes.string.isRequired,\n\ttooltip: PropTypes.string.isRequired,\n};\n\nexport default LabelWithTooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n\tForm,\n\tInput,\n\tInputNumber,\n\tButton,\n\tRadio,\n\t// Checkbox\n} from 'antd';\nimport LabelWithTooltip from '../molecules/LabelWithTooltip';\nimport GLOBAL_CONSTANTS from '../../lib/Constants';\n\nconst CONSTANTS = {\n\tDEFAULT_DATA_SOURCE: GLOBAL_CONSTANTS.DATA_SOURCE.TTN,\n\tDEFAULT_CORS_PROXY: 'https://cors-anywhere.herokuapp.com/',\n\tDEFAULT_QUERY_LAST: '10m',\n\tDEFAULT_MAX_POINTS: 10,\n};\n\n// form wouldn't grow the parent on its own\n// add growth if there is width (not mobile portrait)\n// reference: https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints\nconst WideForm = styled(Form)`\n\t@media (min-width: 576px) {\n\t\twidth: 45em;\n\t}\n`;\n\nconst mustBeSetIfDataSourceIsTtn = ({ getFieldValue }) => ({\n\tvalidator(rule, value) {\n\t\tif (value || getFieldValue('dataSource') !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn Promise.reject(Error(''));\n\t},\n\tmessage: 'Value must be provided if data source is TTN',\n})\n\nclass Settings extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdataSource: props.dataSource,\n\t\t};\n\t}\n\n\tonFinish = (values) => {\n\t\tconst { onFinish } = this.props;\n\t\t// log\n\t\tconsole.log('Success:', values);\n\t\t// pass event higher\n\t\tonFinish(values);\n\t};\n\n\tonFinishFailed = (errorInfo) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\tonValuesChange = (changedValues, allValues) => {\n\t\tconsole.log('onValuesChange:', changedValues, allValues);\n\t\tif (typeof changedValues.dataSource === 'string') { // if data source changed\n\t\t\tthis.setState({ dataSource: changedValues.dataSource }); // update state\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tgoogleApiKey, mapBoxAccessToken, serializedSettings,\n\t\t\tcustomDataUrl, ttnApplicationId, ttnDeviceId, ttnAccessKey, ttnCorsProxyUrl, ttnQueryLast,\n\t\t\tmaxPointsToRenderOnMap,\n\t\t} = this.props;\n\t\tconst { dataSource } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<WideForm\n\t\t\t\t\tname=\"basic\"\n\t\t\t\t\tlabelCol={{ span: 12 }}\n\t\t\t\t\twrapperCol={{ span: 12 }}\n\t\t\t\t\tonFinish={this.onFinish}\n\t\t\t\t\tonFinishFailed={this.onFinishFailed}\n\t\t\t\t\tonValuesChange={this.onValuesChange}\n\t\t\t\t>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"MapBox access token\" tooltip=\"This is the preferred type of map that rotates in sync with your heading\" />}\n\t\t\t\t\t\tname=\"mapBoxAccessToken\"\n\t\t\t\t\t\tinitialValue={mapBoxAccessToken}\n\t\t\t\t\t\tdependencies={['googleApiKey']}\n\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\t\t\tvalidator(rule, value) {\n\t\t\t\t\t\t\t\t\tif (value || getFieldValue('googleApiKey')) {\n\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn Promise.reject(Error(''));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmessage: 'Please specify at least one map API key',\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input placeholder=\"pk....\" />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"Google API key\" tooltip=\"This is another type of map that can be used\" />}\n\t\t\t\t\t\tname=\"googleApiKey\"\n\t\t\t\t\t\tinitialValue={googleApiKey}\n\t\t\t\t\t\tdependencies={['mapBoxAccessToken']}\n\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\t\t\tvalidator(rule, value) {\n\t\t\t\t\t\t\t\t\tif (value || getFieldValue('mapBoxAccessToken')) {\n\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn Promise.reject(Error(''));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmessage: 'Please specify at least one map API key',\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input placeholder=\"Axxxx...xxx_xxx...xxx\" />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item label=\"Data source\" name=\"dataSource\" initialValue={dataSource}>\n\t\t\t\t\t\t<Radio.Group value={dataSource}>\n\t\t\t\t\t\t\t<Radio.Button value={GLOBAL_CONSTANTS.DATA_SOURCE.TTN}>TTN</Radio.Button>\n\t\t\t\t\t\t\t<Radio.Button value={GLOBAL_CONSTANTS.DATA_SOURCE.CUSTOM}>Custom</Radio.Button>\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Custom data url\"\n\t\t\t\t\t\tname=\"customDataUrl\"\n\t\t\t\t\t\tinitialValue={customDataUrl}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.CUSTOM}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"CORS proxy for TTN\" tooltip=\"You can run your own, see cors-anywhere@github\" />}\n\t\t\t\t\t\tname=\"ttnCorsProxyUrl\"\n\t\t\t\t\t\tinitialValue={ttnCorsProxyUrl}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN}\n\t\t\t\t\t\tdependencies={['dataSource']}\n\t\t\t\t\t\trules={[mustBeSetIfDataSourceIsTtn]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"TTN application id\" tooltip=\"The id of your TTN application, has to be integrated with the Data Storage integration\" />}\n\t\t\t\t\t\tname=\"ttnApplicationId\"\n\t\t\t\t\t\tinitialValue={ttnApplicationId}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN}\n\t\t\t\t\t\tdependencies={['dataSource']}\n\t\t\t\t\t\trules={[mustBeSetIfDataSourceIsTtn]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"TTN device id\" tooltip=\"The id of the device you want to locate\" />}\n\t\t\t\t\t\tname=\"ttnDeviceId\"\n\t\t\t\t\t\tinitialValue={ttnDeviceId}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN}\n\t\t\t\t\t\tdependencies={['dataSource']}\n\t\t\t\t\t\trules={[mustBeSetIfDataSourceIsTtn]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"TTN access key\" tooltip=\"Access key for the TTN application, you can generate a specific one for this use case in the console\" />}\n\t\t\t\t\t\tname=\"ttnAccessKey\"\n\t\t\t\t\t\tinitialValue={ttnAccessKey}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN}\n\t\t\t\t\t\tdependencies={['dataSource']}\n\t\t\t\t\t\trules={[mustBeSetIfDataSourceIsTtn]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input placeholder=\"ttn-account-v2....\" />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"TTN query 'last'\" tooltip=\"Duration on which we want to get the data. Examples: 30s, 10m, 1h, 2d, etc\" />}\n\t\t\t\t\t\tname=\"ttnQueryLast\"\n\t\t\t\t\t\tinitialValue={ttnQueryLast}\n\t\t\t\t\t\thidden={dataSource !== GLOBAL_CONSTANTS.DATA_SOURCE.TTN}\n\t\t\t\t\t\tdependencies={['dataSource']}\n\t\t\t\t\t\trules={[mustBeSetIfDataSourceIsTtn]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel={<LabelWithTooltip label=\"Max number of points to render on map\" tooltip=\"If data source returned more samples then the newest will be rendered\" />}\n\t\t\t\t\t\tname=\"maxPointsToRenderOnMap\"\n\t\t\t\t\t\tinitialValue={maxPointsToRenderOnMap}\n\t\t\t\t\t\trules={[{ required: true, message: 'Please set number of points!' }]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<InputNumber min={1} max={100} />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item wrapperCol={{ sm: { offset: 12, span: 12 }, xs: { offset: 0, span: 12 } }}>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={() => { const { onFinish } = this.props; onFinish(); }}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</WideForm>\n\t\t\t\t<a href={`#${serializedSettings}`}>Direct url to current configuration</a>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nSettings.defaultProps = {\n\tmapBoxAccessToken: '',\n\tgoogleApiKey: '',\n\tdataSource: CONSTANTS.DEFAULT_DATA_SOURCE,\n\tcustomDataUrl: '',\n\tttnApplicationId: '',\n\tttnDeviceId: '',\n\tttnAccessKey: '',\n\tttnCorsProxyUrl: CONSTANTS.DEFAULT_CORS_PROXY,\n\tttnQueryLast: CONSTANTS.DEFAULT_QUERY_LAST,\n\tmaxPointsToRenderOnMap: CONSTANTS.DEFAULT_MAX_POINTS,\n};\n\nSettings.propTypes = {\n\tonFinish: PropTypes.func.isRequired,\n\tserializedSettings: PropTypes.string.isRequired,\n\tmapBoxAccessToken: PropTypes.string,\n\tgoogleApiKey: PropTypes.string,\n\tdataSource: PropTypes.string,\n\tcustomDataUrl: PropTypes.string,\n\tttnApplicationId: PropTypes.string,\n\tttnDeviceId: PropTypes.string,\n\tttnAccessKey: PropTypes.string,\n\tttnCorsProxyUrl: PropTypes.string,\n\tttnQueryLast: PropTypes.string,\n\tmaxPointsToRenderOnMap: PropTypes.number,\n};\n\nexport default Settings;\n","import React from 'react';\nimport { Table, Tooltip } from 'antd';\n// import PropTypes from 'prop-types';\nimport { PointsPropType } from '../../lib/PropTypes';\nimport { MapLinkIcon } from '../atoms/Icons';\n\nconst columns = [\n\t{\n\t\ttitle: 'Time',\n\t\tdataIndex: 'time',\n\t\tkey: 'time',\n\t\trender: (value) => value.toLocaleString(),\n\t\tdefaultSortOrder: 'descend',\n\t\tsorter: (a, b) => a.time - b.time,\n\t},\n\t{\n\t\ttitle: 'Latitude',\n\t\tdataIndex: 'latitude',\n\t\tkey: 'latitude',\n\t},\n\t{\n\t\ttitle: 'Longitude',\n\t\tdataIndex: 'longitude',\n\t\tkey: 'longitude',\n\t},\n\t{\n\t\ttitle: 'Altitude',\n\t\tdataIndex: 'altitude',\n\t\tkey: 'altitude',\n\t},\n\t{\n\t\ttitle: 'HDOP',\n\t\tdataIndex: 'hdop',\n\t\tkey: 'hdop',\n\t\tsorter: (a, b) => a.hdop - b.hdop,\n\t},\n\t{\n\t\ttitle: 'Satelites',\n\t\tdataIndex: 'sats',\n\t\tkey: 'sats',\n\t\tsorter: (a, b) => a.sats - b.sats,\n\t},\n\t{\n\t\ttitle: 'Device Id',\n\t\tdataIndex: 'deviceId',\n\t\tkey: 'deviceId',\n\t\tsorter: (a, b) => a.deviceId.localeCompare(b.deviceId),\n\t},\n\t{\n\t\ttitle: 'Map',\n\t\tkey: 'actions',\n\t\trender: (text, record) => (\n\t\t\t<>\n\t\t\t\t{record.latitude && record.longitude && (\n\t\t\t\t\t<Tooltip title=\"Open in Google maps\">\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://maps.google.com/maps?z=15&q=loc:${record.latitude}+${record.longitude}`}>\n\t\t\t\t\t\t\t<MapLinkIcon />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t</>\n\t\t),\n\t},\n];\n\nclass PointsTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { points } = this.props;\n\n\t\treturn (\n\t\t\t<Table dataSource={points} columns={columns} />\n\t\t);\n\t}\n}\n\nPointsTable.defaultProps = {\n\tpoints: [],\n}\n\nPointsTable.propTypes = {\n\tpoints: PointsPropType,\n};\n\nexport default PointsTable;\n","const CONSTANTS = {\n\tSTORAGE_KEY_PREFIX: 'ttn_',\n\tSETTINGS: {\n\t\tGOOGLE_API_KEY: 'googleApiKey',\n\t\tMAP_BOX_ACCESS_TOKEN: 'mapBoxAccessToken',\n\t\tDATA_SOURCE: 'dataSource',\n\t\tCUSTOM_DATA_URL: 'customDataUrl',\n\t\tTTN_APPLICATION_ID: 'ttnApplicationId',\n\t\tTTN_DEVICE_ID: 'ttnDeviceId',\n\t\tTTN_ACCESS_KEY: 'ttnAccessKey',\n\t\tTTN_CORS_PROXY_URL: 'ttnCorsProxyUrl',\n\t\tTTN_QUERY_LAST: 'ttnQueryLast',\n\t\tMAX_POINTS_TO_RENDER_ON_MAP: 'maxPointsToRenderOnMap',\n\t},\n};\n\nfunction getKey(key) {\n\treturn `${CONSTANTS.STORAGE_KEY_PREFIX}${key}`;\n}\n\nfunction capitalizeFirstLetter(string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass Settings {\n\t// serialization\n\tstatic serialize() {\n\t\t// take values from local storage and store them in a url parameter encoded string\n\t\tconst settings = [];\n\t\tObject.values(CONSTANTS.SETTINGS).forEach((settingKey) => {\n\t\t\tconst val = localStorage.getItem(getKey(settingKey));\n\t\t\tif (val !== null && val !== '' && val !== undefined) {\n\t\t\t\tsettings.push(`${settingKey}=${encodeURIComponent(val)}`);\n\t\t\t}\n\t\t});\n\t\treturn settings.join('&');\n\t}\n\n\tstatic deserialize(data) {\n\t\t// store in localStorage\n\t\tconst settings = data.split('&');\n\t\tconst possibleSettings = Object.values(CONSTANTS.SETTINGS);\n\t\tsettings.forEach((settingPair) => {\n\t\t\tconst pair = settingPair.split('=');\n\t\t\tif (pair.length === 2 && possibleSettings.includes(pair[0])) {\n\t\t\t\tlocalStorage.setItem(getKey(pair[0]), decodeURIComponent(pair[1]));\n\t\t\t}\n\t\t});\n\t}\n\n\t// access individual properties\n\t/*\n\tstatic getGoogleApiKey() {\n\t\treturn localStorage.getItem(getKey(CONSTANTS.SETTINGS.GOOGLE_API_KEY));\n\t}\n\n\tstatic setGoogleApiKey(value) {\n\t\tlocalStorage.setItem(getKey(CONSTANTS.SETTINGS.GOOGLE_API_KEY), value);\n\t}\n\n\tstatic getMapBoxAccessToken() {\n\t\treturn localStorage.getItem(getKey(CONSTANTS.SETTINGS.MAP_BOX_ACCESS_TOKEN));\n\t}\n\n\tstatic setMapBoxAccessToken(value) {\n\t\tlocalStorage.setItem(getKey(CONSTANTS.SETTINGS.MAP_BOX_ACCESS_TOKEN), value);\n\t}\n\t*/\n}\n\nfunction nullToUndefined(v) {\n\treturn v === null ? undefined : v;\n}\n\n// dynamically add get and set functions for settings\nObject.values(CONSTANTS.SETTINGS).forEach((settingKey) => {\n\tSettings[`get${capitalizeFirstLetter(settingKey)}`] = () => nullToUndefined(localStorage.getItem(getKey(settingKey)));\n\tSettings[`set${capitalizeFirstLetter(settingKey)}`] = (value) => (value !== null ? localStorage.setItem(getKey(settingKey), value) : localStorage.removeItem(getKey(settingKey)));\n});\n\nexport default Settings;\n","const JSON5 = require('json5');\n\n/*\n{\n\t\"altitude\": 69,\n\t\"device_id\": \"tbeam-v11\",\n\t\"hdop\": 1.44,\n\t\"latitude\": 31.000000,\n\t\"longitude\": 34.000000,\n\t\"raw\": \"QQQQQQQQQQQ\",\n\t\"sats\": 6,\n\t\"time\": \"2020-06-21T06:38:50.916274439Z\"\n},\nor for Cayenne LPP\n{\n\tdevice_id,\n\ttime,\n\tgps_20: \"map[altitude:93 latitude:31.0000 longitude:34.0000]\"\n}\nor\nmap[longitude:34.6375 altitude:66 latitude:31.7714]\n*/\nconst lppGpsRegexp = /^map\\[(.*)\\]$/;\n\n// Handling hdop: https://gis.stackexchange.com/questions/97774/how-can-i-convert-horizontal-dilution-of-position-to-a-radius-of-68-confidence\n// cheap USB/Bluetooth/built-in GPS units the manufacturers simply use 3-5 m as the accuracy of the device and then multiply it with HDOP\n\nclass PayloadProcessing {\n\tstatic preProcessSample(sample) {\n\t\tlet { latitude, longitude, altitude } = sample;\n\t\tconst {\n\t\t\tgps_20, device_id, hdop, sats, // eslint-disable-line camelcase\n\t\t} = sample;\n\t\t// parse LPP format\n\t\tif (gps_20 && typeof gps_20 === 'string') { // eslint-disable-line camelcase\n\t\t\tconst match = gps_20.match(lppGpsRegexp);\n\t\t\tif (match) {\n\t\t\t\tconst jsonized = (`{${match[1]}}`).replace(/ /g, ', '); // reformat into a valid json5 string\n\t\t\t\ttry {\n\t\t\t\t\tconst object = JSON5.parse(jsonized);\n\t\t\t\t\taltitude = object.altitude;\n\t\t\t\t\tlatitude = object.latitude;\n\t\t\t\t\tlongitude = object.longitude;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('error parsing LPP gsp payload', error, jsonized);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// time is the only required field\n\t\treturn {\n\t\t\ttime: new Date(sample.time),\n\t\t\tdeviceId: device_id,\n\t\t\taltitude,\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t\thdop,\n\t\t\tsats,\n\t\t\t// TODO, add accuracy property based on hdop\n\t\t};\n\t}\n}\n\nexport default PayloadProcessing;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button, Popover, notification } from 'antd';\nimport 'antd/dist/antd.css';\nimport { HashGet } from 'hashget';\nimport { DataIcon, ReloadIcon, SettingsIcon } from './components/atoms/Icons';\n\nimport Locator from './components/organisms/Locator';\nimport Settings from './components/organisms/Settings';\nimport PointsTable from './components/organisms/PointsTable';\nimport SettingsProvider from './lib/Settings';\nimport GLOBAL_CONSTANTS from './lib/Constants';\nimport PayloadProcessing from './lib/PayloadProcessing';\n// import './App.css';\n\n// log start\nconsole.log(process.env.NODE_ENV, process.env);\n\nconst CONSTANTS = {\n\tSETTINGS_HASH_PARAM: 'settings',\n};\n\nconst AppContainer = styled.div`\n\ttext-align: center;\n\tbackground-color: #282c34;\n\tmin-height: 100vh;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: white;\n`;\nconst CommandsBar = styled.nav`\n\ttext-align: center;\n\tposition: absolute;\n\tz-index: 100;\n\twidth: 100%;\n`;\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// see if need to load persistent settings from url\n\t\tconst hashParser = new HashGet();\n\t\tif (hashParser.has(CONSTANTS.SETTINGS_HASH_PARAM)) {\n\t\t\tconst serializedSettings = hashParser.getValue(CONSTANTS.SETTINGS_HASH_PARAM);\n\t\t\tconsole.log('loading settings from hash', serializedSettings);\n\t\t\tSettingsProvider.deserialize(decodeURIComponent(serializedSettings));\n\t\t}\n\t\t// init state\n\t\t// parse format for some settings\n\t\tconst maxPointsToRenderOnMap = SettingsProvider.getMaxPointsToRenderOnMap()\n\t\tthis.state = {\n\t\t\tloadingData: false,\n\t\t\tsettingsVisible: false,\n\t\t\tpointsTableVisible: false,\n\t\t\tpoints: [],\n\t\t\t// persistent settings\n\t\t\tgoogleApiKey: SettingsProvider.getGoogleApiKey(),\n\t\t\tmapBoxAccessToken: SettingsProvider.getMapBoxAccessToken() || process.env.REACT_APP_DEFAULT_MAP_BOX_ACCESS_TOKEN,\n\t\t\tdataSource: SettingsProvider.getDataSource(),\n\t\t\tcustomDataUrl: SettingsProvider.getCustomDataUrl(),\n\t\t\tttnApplicationId: SettingsProvider.getTtnApplicationId(),\n\t\t\tttnDeviceId: SettingsProvider.getTtnDeviceId(),\n\t\t\tttnAccessKey: SettingsProvider.getTtnAccessKey(),\n\t\t\tttnCorsProxyUrl: SettingsProvider.getTtnCorsProxyUrl() || process.env.REACT_APP_DEFAULT_TTN_CORS_PROXY_URL,\n\t\t\tttnQueryLast: SettingsProvider.getTtnQueryLast(),\n\t\t\tmaxPointsToRenderOnMap: maxPointsToRenderOnMap !== undefined ? parseInt(maxPointsToRenderOnMap, 10) : maxPointsToRenderOnMap,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// initial load\n\t\tthis.handleLoadData();\n\t}\n\n\thandleSettingsFinish = (values) => {\n\t\tconst { googleApiKey } = this.state;\n\n\t\t// check finish success or failure\n\t\tif (!values) { // finish without apply\n\t\t\tthis.setState({\n\t\t\t\tsettingsVisible: false,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// save values\n\t\tSettingsProvider.setGoogleApiKey(values.googleApiKey);\n\t\tSettingsProvider.setMapBoxAccessToken(values.mapBoxAccessToken);\n\t\tSettingsProvider.setDataSource(values.dataSource);\n\t\tSettingsProvider.setCustomDataUrl(values.customDataUrl);\n\t\tSettingsProvider.setTtnApplicationId(values.ttnApplicationId);\n\t\tSettingsProvider.setTtnDeviceId(values.ttnDeviceId);\n\t\tSettingsProvider.setTtnAccessKey(values.ttnAccessKey);\n\t\tSettingsProvider.setTtnCorsProxyUrl(values.ttnCorsProxyUrl);\n\t\tSettingsProvider.setTtnQueryLast(values.ttnQueryLast);\n\t\tSettingsProvider.setMaxPointsToRenderOnMap(values.maxPointsToRenderOnMap);\n\n\t\t// special case, check for google api key change\n\t\t// Google API key change requires a reload because the key is part of a JS url that is added to the page\n\t\t// further, it didn't work in componentDidUpdate under the HOC, needs to be above (Locator or App)\n\t\tif (googleApiKey !== values.googleApiKey) {\n\t\t\tconsole.log('handleSettingsFinish, reload');\n\t\t\twindow.location.reload();\n\t\t\treturn;\n\t\t}\n\n\t\t// update state\n\t\tthis.setState({\n\t\t\tsettingsVisible: false,\n\t\t\tgoogleApiKey: values.googleApiKey,\n\t\t\tmapBoxAccessToken: values.mapBoxAccessToken,\n\t\t\tdataSource: values.dataSource,\n\t\t\tcustomDataUrl: values.customDataUrl,\n\t\t\tttnApplicationId: values.ttnApplicationId,\n\t\t\tttnDeviceId: values.ttnDeviceId,\n\t\t\tttnAccessKey: values.ttnAccessKey,\n\t\t\tttnCorsProxyUrl: values.ttnCorsProxyUrl,\n\t\t\tttnQueryLast: values.ttnQueryLast,\n\t\t\tmaxPointsToRenderOnMap: values.maxPointsToRenderOnMap,\n\t\t});\n\t}\n\n\thandleLoadData = () => {\n\t\tconst { loadingData } = this.state;\n\t\tif (loadingData) {\n\t\t\treturn; // don't load another time in parallel\n\t\t}\n\t\tconsole.log('handle fetch');\n\t\tthis.setState({ loadingData: true });\n\t\tthis.fetchData()\n\t\t\t.then((response) => {\n\t\t\t\t// check errors\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\t// should we handle non json response?\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\t// show issue\n\t\t\t\tif (response.status === 0) {\n\t\t\t\t\tnotification.error({\n\t\t\t\t\t\tmessage: 'Unable to get response',\n\t\t\t\t\t\tdescription: 'Are there CORS limitations in place?',\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnotification.error({\n\t\t\t\t\t\tmessage: 'Error code reported',\n\t\t\t\t\t\tdescription: response.statusText,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setState({ loadingData: false });\n\t\t\t\treturn null; // will pass 'null' as data for next processor in the chain\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif (data) {\n\t\t\t\t\t// do something\n\t\t\t\t\tthis.processLocationData(data);\n\t\t\t\t}\n\t\t\t\tthis.setState({ loadingData: false });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tnotification.error({\n\t\t\t\t\tmessage: 'Error loading data',\n\t\t\t\t\tdescription: error.toString(),\n\t\t\t\t});\n\t\t\t\tthis.setState({ loadingData: false });\n\t\t\t});\n\t\t// setTimeout(() => { this.setState({ loadingData: false }); }, 5000);\n\t};\n\n\tprocessLocationData(data) {\n\t\tconsole.log('Got data', data.length, data);\n\n\t\ttry {\n\t\t\tconst points = data.map(PayloadProcessing.preProcessSample);\n\t\t\tthis.setState({ points });\n\t\t} catch (error) {\n\t\t\tnotification.error({\n\t\t\t\tmessage: 'Error parsing data',\n\t\t\t\tdescription: error.toString(),\n\t\t\t});\n\t\t}\n\t}\n\n\tfetchData() {\n\t\tconst {\n\t\t\tdataSource, customDataUrl, ttnApplicationId, ttnDeviceId, ttnAccessKey, ttnCorsProxyUrl, ttnQueryLast,\n\t\t} = this.state;\n\t\tif (dataSource === GLOBAL_CONSTANTS.DATA_SOURCE.CUSTOM) {\n\t\t\treturn fetch(customDataUrl, {\n\t\t\t\t// mode: 'no-cors', // you get no content with this\n\t\t\t});\n\t\t}\n\t\tif (dataSource === GLOBAL_CONSTANTS.DATA_SOURCE.TTN) {\n\t\t\tconst myHeaders = new Headers();\n\t\t\tmyHeaders.append('Accept', 'application/json');\n\t\t\tmyHeaders.append('Authorization', `key ${ttnAccessKey}`);\n\t\t\treturn fetch(`${ttnCorsProxyUrl}https://${ttnApplicationId}.data.thethingsnetwork.org/api/v2/query/${ttnDeviceId}?last=${ttnQueryLast}`, {\n\t\t\t\theaders: myHeaders,\n\t\t\t}); // TODO, make \"last\" configurable\n\t\t}\n\t\t// else, error\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treject(new Error('Data source is not configured'));\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tloadingData, settingsVisible, pointsTableVisible, points,\n\t\t\tgoogleApiKey, mapBoxAccessToken,\n\t\t\tdataSource, customDataUrl, ttnApplicationId, ttnDeviceId, ttnAccessKey, ttnCorsProxyUrl, ttnQueryLast,\n\t\t\tmaxPointsToRenderOnMap,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t<AppContainer>\n\t\t\t\t<CommandsBar>\n\t\t\t\t\t<Button loading={loadingData} onClick={this.handleLoadData} icon={<ReloadIcon />}>Reload data</Button>\n\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\ttitle=\"Data\"\n\t\t\t\t\t\tvisible={pointsTableVisible}\n\t\t\t\t\t\tcontent={(\n\t\t\t\t\t\t\t<PointsTable\n\t\t\t\t\t\t\t\tpoints={points}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\tonVisibleChange={(visible) => { this.setState({ pointsTableVisible: visible }); }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button icon={<DataIcon />}>Data</Button>\n\t\t\t\t\t</Popover>\n\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\ttitle=\"Settings\"\n\t\t\t\t\t\tvisible={settingsVisible}\n\t\t\t\t\t\tcontent={(\n\t\t\t\t\t\t\t<Settings\n\t\t\t\t\t\t\t\tonFinish={this.handleSettingsFinish}\n\t\t\t\t\t\t\t\tserializedSettings={`${CONSTANTS.SETTINGS_HASH_PARAM}=${encodeURIComponent(SettingsProvider.serialize())}`}\n\t\t\t\t\t\t\t\tgoogleApiKey={googleApiKey}\n\t\t\t\t\t\t\t\tmapBoxAccessToken={mapBoxAccessToken}\n\t\t\t\t\t\t\t\tdataSource={dataSource}\n\t\t\t\t\t\t\t\tcustomDataUrl={customDataUrl}\n\t\t\t\t\t\t\t\tttnApplicationId={ttnApplicationId}\n\t\t\t\t\t\t\t\tttnDeviceId={ttnDeviceId}\n\t\t\t\t\t\t\t\tttnAccessKey={ttnAccessKey}\n\t\t\t\t\t\t\t\tttnCorsProxyUrl={ttnCorsProxyUrl}\n\t\t\t\t\t\t\t\tttnQueryLast={ttnQueryLast}\n\t\t\t\t\t\t\t\tmaxPointsToRenderOnMap={maxPointsToRenderOnMap}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\tonVisibleChange={() => { this.setState({ settingsVisible: true /* Force closing with save or cancel causing onFinish */ }) }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button icon={<SettingsIcon />}>Settings</Button>\n\t\t\t\t\t</Popover>\n\t\t\t\t</CommandsBar>\n\t\t\t\t<Locator\n\t\t\t\t\tgoogleApiKey={googleApiKey}\n\t\t\t\t\tmapBoxAccessToken={mapBoxAccessToken}\n\t\t\t\t\tpoints={points}\n\t\t\t\t\tmaxPointsToRenderOnMap={maxPointsToRenderOnMap}\n\t\t\t\t/>\n\t\t\t</AppContainer>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// [::1] is the IPv6 localhost address.\n// 127.0.0.0/8 are considered localhost for IPv4.\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n\t|| window.location.hostname === '[::1]'\n\t|| window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n\t\t\t\t|| (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}